// Copyright 2011 Semantic Expression, Inc. All rights reserved.
//
// This program and the accompanying materials are made available under the
// terms of the GNU General Public License, either version 3 or (at your option)
// any later version. The terms of this license may be found at
// http://www.gnu.org/copyleft/gpl.html
//
// This program is made available on an "as is" basis, without warranties or
// conditions of any kind, either express or implied.
//
// Please contact us for other licensing options.
//
// Contributors:
//
// Anthony F. Stuart - Initial implementation
//
//
//

package com.semanticexpression.connector.server.repository;

public class PropertyTableCreator extends DatabaseTableCreator
{
  public PropertyTableCreator()
  {
    super("property");
    appendPrefix();
    append("id integer generated by default as identity (start with 1, increment by 1) not null,");
    append("entity_id bigint not null references entity(id) on delete cascade,");
    append("property_name varchar(64) not null,");
    append("index integer not null default " + Repository.NULL_INDEX + ",");
    append("entity_value bigint references entity(id) on delete cascade,");
    append("integer_value integer,");
    append("bigint_value bigint,");
    append("boolean_value boolean,");
    append("varchar_value varchar(256),");
    append("clob_value clob,");
    append("blob_value blob,");
    append("enum_value varchar(256),");
    append("utc_millis_value bigint,");
    append("valid_from bigint,");
    append("valid_to bigint,");
    append("modified_by bigint references entity(id) on delete cascade,");
    append("primary key(id),");
    append("unique(entity_id, property_name, index, valid_to)");
    appendSuffix();
  }
}
